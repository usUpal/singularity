{
  "nodes": [
    {
      "width": 300,
      "height": 576,
      "id": "chatOpenAI_0",
      "position": {
        "x": 876.3169201358933,
        "y": 921.2784215405995
      },
      "type": "customNode",
      "data": {
        "id": "chatOpenAI_0",
        "label": "ChatOpenAI",
        "version": 2,
        "name": "chatOpenAI",
        "type": "ChatOpenAI",
        "baseClasses": [
          "ChatOpenAI",
          "BaseChatModel",
          "BaseLanguageModel",
          "Runnable"
        ],
        "category": "Chat Models",
        "description": "Wrapper around OpenAI large language models that use the Chat endpoint",
        "inputParams": [
          {
            "label": "Connect Credential",
            "name": "credential",
            "type": "credential",
            "credentialNames": [
              "openAIApi"
            ],
            "id": "chatOpenAI_0-input-credential-credential"
          },
          {
            "label": "Model Name",
            "name": "modelName",
            "type": "options",
            "options": [
              {
                "label": "gpt-4",
                "name": "gpt-4"
              },
              {
                "label": "gpt-4-1106-preview",
                "name": "gpt-4-1106-preview"
              },
              {
                "label": "gpt-4-vision-preview",
                "name": "gpt-4-vision-preview"
              },
              {
                "label": "gpt-4-0613",
                "name": "gpt-4-0613"
              },
              {
                "label": "gpt-4-32k",
                "name": "gpt-4-32k"
              },
              {
                "label": "gpt-4-32k-0613",
                "name": "gpt-4-32k-0613"
              },
              {
                "label": "gpt-3.5-turbo",
                "name": "gpt-3.5-turbo"
              },
              {
                "label": "gpt-3.5-turbo-1106",
                "name": "gpt-3.5-turbo-1106"
              },
              {
                "label": "gpt-3.5-turbo-0613",
                "name": "gpt-3.5-turbo-0613"
              },
              {
                "label": "gpt-3.5-turbo-16k",
                "name": "gpt-3.5-turbo-16k"
              },
              {
                "label": "gpt-3.5-turbo-16k-0613",
                "name": "gpt-3.5-turbo-16k-0613"
              }
            ],
            "default": "gpt-3.5-turbo",
            "optional": true,
            "id": "chatOpenAI_0-input-modelName-options"
          },
          {
            "label": "Temperature",
            "name": "temperature",
            "type": "number",
            "step": 0.1,
            "default": 0.9,
            "optional": true,
            "id": "chatOpenAI_0-input-temperature-number"
          },
          {
            "label": "Max Tokens",
            "name": "maxTokens",
            "type": "number",
            "step": 1,
            "optional": true,
            "additionalParams": true,
            "id": "chatOpenAI_0-input-maxTokens-number"
          },
          {
            "label": "Top Probability",
            "name": "topP",
            "type": "number",
            "step": 0.1,
            "optional": true,
            "additionalParams": true,
            "id": "chatOpenAI_0-input-topP-number"
          },
          {
            "label": "Frequency Penalty",
            "name": "frequencyPenalty",
            "type": "number",
            "step": 0.1,
            "optional": true,
            "additionalParams": true,
            "id": "chatOpenAI_0-input-frequencyPenalty-number"
          },
          {
            "label": "Presence Penalty",
            "name": "presencePenalty",
            "type": "number",
            "step": 0.1,
            "optional": true,
            "additionalParams": true,
            "id": "chatOpenAI_0-input-presencePenalty-number"
          },
          {
            "label": "Timeout",
            "name": "timeout",
            "type": "number",
            "step": 1,
            "optional": true,
            "additionalParams": true,
            "id": "chatOpenAI_0-input-timeout-number"
          },
          {
            "label": "BasePath",
            "name": "basepath",
            "type": "string",
            "optional": true,
            "additionalParams": true,
            "id": "chatOpenAI_0-input-basepath-string"
          },
          {
            "label": "BaseOptions",
            "name": "baseOptions",
            "type": "json",
            "optional": true,
            "additionalParams": true,
            "id": "chatOpenAI_0-input-baseOptions-json"
          }
        ],
        "inputAnchors": [
          {
            "label": "Cache",
            "name": "cache",
            "type": "BaseCache",
            "optional": true,
            "id": "chatOpenAI_0-input-cache-BaseCache"
          }
        ],
        "inputs": {
          "cache": "",
          "modelName": "gpt-3.5-turbo",
          "temperature": "0",
          "maxTokens": "1000",
          "topP": "1",
          "frequencyPenalty": "",
          "presencePenalty": "",
          "timeout": "",
          "basepath": "",
          "baseOptions": ""
        },
        "outputAnchors": [
          {
            "id": "chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable",
            "name": "chatOpenAI",
            "label": "ChatOpenAI",
            "type": "ChatOpenAI | BaseChatModel | BaseLanguageModel | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "selected": false,
      "dragging": false,
      "positionAbsolute": {
        "x": 876.3169201358933,
        "y": 921.2784215405995
      }
    },
    {
      "width": 300,
      "height": 385,
      "id": "openAIFunctionAgent_0",
      "position": {
        "x": 1536.5179788129285,
        "y": 812.0482746878429
      },
      "type": "customNode",
      "data": {
        "id": "openAIFunctionAgent_0",
        "label": "OpenAI Function Agent",
        "version": 3,
        "name": "openAIFunctionAgent",
        "type": "AgentExecutor",
        "baseClasses": [
          "AgentExecutor",
          "BaseChain",
          "Runnable"
        ],
        "category": "Agents",
        "description": "An agent that uses Function Calling to pick the tool and args to call",
        "inputParams": [
          {
            "label": "System Message",
            "name": "systemMessage",
            "type": "string",
            "rows": 4,
            "optional": true,
            "additionalParams": true,
            "id": "openAIFunctionAgent_0-input-systemMessage-string"
          }
        ],
        "inputAnchors": [
          {
            "label": "Allowed Tools",
            "name": "tools",
            "type": "Tool",
            "list": true,
            "id": "openAIFunctionAgent_0-input-tools-Tool"
          },
          {
            "label": "Memory",
            "name": "memory",
            "type": "BaseChatMemory",
            "id": "openAIFunctionAgent_0-input-memory-BaseChatMemory"
          },
          {
            "label": "OpenAI/Azure Chat Model",
            "name": "model",
            "type": "BaseChatModel",
            "id": "openAIFunctionAgent_0-input-model-BaseChatModel"
          }
        ],
        "inputs": {
          "tools": [
            "{{calculator_0.data.instance}}"
          ],
          "memory": "{{bufferMemory_0.data.instance}}",
          "model": "{{chatOpenAI_0.data.instance}}",
          "systemMessage": "You are AppointmentBot, an automated service to issue the appointments for a hospital.\nYou first greet the patient, then issue an appointment.You will ask to collect the entire appointment details, then summarize it and check for a final time if the patient wants to add anything else.if it's a pickup, you ask for an address.Finally you collect the payment.\nMake sure to clarify all options, departments, doctors, timings to uniquely identify the department from the departments.You respond in a short, very conversational friendly style.\nDon’t answer any questions outside this below scope. If someone asked a question that is not related to medical or appointment matters,Your response would be “sorry I can’t response to that.”\n\nThe departments includes:\nConsultas por medicina general control\nConsultas por medicina general primera vez\nConsultas por enfermería primera vez\nConsultas por enfermería control\nConsulta por odontología primera vez\nConsultas por odontología control\nLaboratorios de primer nivel de atenciones\nVacunación\nCurso de preparación para la maternidad y paternidad\n\nThe doctors includes:\nDra. Mildred Maria Galvis Aragón, Odontologia\nDr. Jeiber Espitia Gomez, General\nDra. Ana María Sofán Sánchez, Ginecología\nDr. Maria Ariza, Psiquiatría\nDr. Sonia Yolima Castiblanco, Pediatría\n\nThe timings available:\n09:00, 10:00, 11:00, 12:00\n\n\nConversation will follow this template; this is a generic conversation. Your conversation will be the same but the context will change from customer to customer. If a customer asks for any service other than the above departments, you will say “sorry, we don’t have any [dept] available right now.”\n\n## Format\nAppointmentBot: Greetings, Welcome to Evercare Hospital. I am AppoinmentBot, will help you appoint our best available doctors. Which services are you interested in?\nClient: Good morning, I like to consult about my teeth. Who is available to consult?\n\nAppointmentBot: Great. We have departments of “Consulta por odontología primera vez\n” & “Consultas por odontología control” and doctor “Dra. Mildred Maria Galvis Aragón, Odontologia” is available for time ” 09:00, 10:00, 11:00, 12:00 ”\nClient: yeah, but the timing is a little bit complex for me, can you schedule 8.00?\n\nAppointmentBot: I am extremely sorry to hear that but only available times are “09:00, 10:00, 11:00, 12:00”\nClient:ok, confirm it then at 12.00\n\nAppointmentBot: thanks sir, can you please provide your name, address and contact number?\nClient: yeah, I am upal, address is xyz and contact number is 911.\n\nAppointmentBot:\nthank you sir, So your appointment summary is:\nName: Upal\nDoctor: Dra. Mildred Maria Galvis Aragón, \nDept: “Consultas por odontología control”\nTime: 12.00\nAdder: xyz,\nContact: 911\nKindly do the payment in +888-888-888 and bring the receipt during the visit. Thanks for choosing EverCare hospital. Have a nice day.\nClient: I will, thanks.\n\n\nDon’t answer any questions outside this above scope. If someone asked a question that is not related to medical or appointment matters,Your response would be “sorry I can’t response to that”"
        },
        "outputAnchors": [
          {
            "id": "openAIFunctionAgent_0-output-openAIFunctionAgent-AgentExecutor|BaseChain|Runnable",
            "name": "openAIFunctionAgent",
            "label": "AgentExecutor",
            "type": "AgentExecutor | BaseChain | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "selected": false,
      "positionAbsolute": {
        "x": 1536.5179788129285,
        "y": 812.0482746878429
      },
      "dragging": false
    },
    {
      "width": 300,
      "height": 378,
      "id": "bufferMemory_0",
      "position": {
        "x": 864.1199108047924,
        "y": 510.6754635969331
      },
      "type": "customNode",
      "data": {
        "id": "bufferMemory_0",
        "label": "Buffer Memory",
        "version": 1,
        "name": "bufferMemory",
        "type": "BufferMemory",
        "baseClasses": [
          "BufferMemory",
          "BaseChatMemory",
          "BaseMemory"
        ],
        "category": "Memory",
        "description": "Remembers previous conversational back and forths directly",
        "inputParams": [
          {
            "label": "Memory Key",
            "name": "memoryKey",
            "type": "string",
            "default": "chat_history",
            "id": "bufferMemory_0-input-memoryKey-string"
          },
          {
            "label": "Input Key",
            "name": "inputKey",
            "type": "string",
            "default": "input",
            "id": "bufferMemory_0-input-inputKey-string"
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "memoryKey": "chat_history",
          "inputKey": "input"
        },
        "outputAnchors": [
          {
            "id": "bufferMemory_0-output-bufferMemory-BufferMemory|BaseChatMemory|BaseMemory",
            "name": "bufferMemory",
            "label": "BufferMemory",
            "type": "BufferMemory | BaseChatMemory | BaseMemory"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "positionAbsolute": {
        "x": 864.1199108047924,
        "y": 510.6754635969331
      },
      "selected": false,
      "dragging": false
    },
    {
      "width": 300,
      "height": 143,
      "id": "calculator_0",
      "position": {
        "x": 1209.9868626569862,
        "y": 657.1619193435031
      },
      "type": "customNode",
      "data": {
        "id": "calculator_0",
        "label": "Calculator",
        "version": 1,
        "name": "calculator",
        "type": "Calculator",
        "baseClasses": [
          "Calculator",
          "Tool",
          "StructuredTool",
          "Runnable"
        ],
        "category": "Tools",
        "description": "Perform calculations on response",
        "inputParams": [],
        "inputAnchors": [],
        "inputs": {},
        "outputAnchors": [
          {
            "id": "calculator_0-output-calculator-Calculator|Tool|StructuredTool|Runnable",
            "name": "calculator",
            "label": "Calculator",
            "type": "Calculator | Tool | StructuredTool | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "selected": false,
      "positionAbsolute": {
        "x": 1209.9868626569862,
        "y": 657.1619193435031
      },
      "dragging": false
    }
  ],
  "edges": [
    {
      "source": "chatOpenAI_0",
      "sourceHandle": "chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable",
      "target": "openAIFunctionAgent_0",
      "targetHandle": "openAIFunctionAgent_0-input-model-BaseChatModel",
      "type": "buttonedge",
      "id": "chatOpenAI_0-chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable-openAIFunctionAgent_0-openAIFunctionAgent_0-input-model-BaseChatModel"
    },
    {
      "source": "bufferMemory_0",
      "sourceHandle": "bufferMemory_0-output-bufferMemory-BufferMemory|BaseChatMemory|BaseMemory",
      "target": "openAIFunctionAgent_0",
      "targetHandle": "openAIFunctionAgent_0-input-memory-BaseChatMemory",
      "type": "buttonedge",
      "id": "bufferMemory_0-bufferMemory_0-output-bufferMemory-BufferMemory|BaseChatMemory|BaseMemory-openAIFunctionAgent_0-openAIFunctionAgent_0-input-memory-BaseChatMemory"
    },
    {
      "source": "calculator_0",
      "sourceHandle": "calculator_0-output-calculator-Calculator|Tool|StructuredTool|Runnable",
      "target": "openAIFunctionAgent_0",
      "targetHandle": "openAIFunctionAgent_0-input-tools-Tool",
      "type": "buttonedge",
      "id": "calculator_0-calculator_0-output-calculator-Calculator|Tool|StructuredTool|Runnable-openAIFunctionAgent_0-openAIFunctionAgent_0-input-tools-Tool"
    }
  ]
}